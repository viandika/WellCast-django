{"version":3,"file":"js/npm.htmx.org.fe1622f6.js","mappings":"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","sources":["webpack://wellcast/./node_modules/htmx.org/dist/htmx.js"],"sourcesContent":["//AMD insanity\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.htmx = factory();\n    }\n}(typeof self !== 'undefined' ? self : this, function () {\nreturn (function () {\n        'use strict';\n\n        // Public API\n        var htmx = {\n            onLoad: onLoadHelper,\n            process: processNode,\n            on: addEventListenerImpl,\n            off: removeEventListenerImpl,\n            trigger : triggerEvent,\n            ajax : ajaxHelper,\n            find : find,\n            findAll : findAll,\n            closest : closest,\n            values : function(elt, type){\n                var inputValues = getInputValues(elt, type || \"post\");\n                return inputValues.values;\n            },\n            remove : removeElement,\n            addClass : addClassToElement,\n            removeClass : removeClassFromElement,\n            toggleClass : toggleClassOnElement,\n            takeClass : takeClassForElement,\n            defineExtension : defineExtension,\n            removeExtension : removeExtension,\n            logAll : logAll,\n            logger : null,\n            useTemplateFragments: false,\n            config : {\n                historyEnabled:true,\n                historyCacheSize:10,\n                refreshOnHistoryMiss:false,\n                defaultSwapStyle:'innerHTML',\n                defaultSwapDelay:0,\n                defaultSettleDelay:20,\n                includeIndicatorStyles:true,\n                indicatorClass:'htmx-indicator',\n                requestClass:'htmx-request',\n                settlingClass:'htmx-settling',\n                swappingClass:'htmx-swapping',\n                allowEval:true,\n                attributesToSettle:[\"class\", \"style\", \"width\", \"height\"],\n                withCredentials:false,\n                wsReconnectDelay: 'full-jitter',\n                disableSelector: \"[hx-disable], [data-hx-disable]\",\n            },\n            parseInterval:parseInterval,\n            _:internalEval,\n            createEventSource: function(url){\n                return new EventSource(url, {withCredentials:true})\n            },\n            createWebSocket: function(url){\n                return new WebSocket(url, []);\n            }\n        };\n\n        var VERBS = ['get', 'post', 'put', 'delete', 'patch'];\n        var VERB_SELECTOR = VERBS.map(function(verb){\n            return \"[hx-\" + verb + \"], [data-hx-\" + verb + \"]\"\n        }).join(\", \");\n\n        //====================================================================\n        // Utilities\n        //====================================================================\n\n\t\tfunction parseInterval(str) {\n\t\t\tif (str == undefined)  {\n\t\t\t\treturn undefined\n\t\t\t}\n\t\t\tif (str.slice(-2) == \"ms\") {\n\t\t\t\treturn parseFloat(str.slice(0,-2)) || undefined\n\t\t\t}\n\t\t\tif (str.slice(-1) == \"s\") {\n\t\t\t\treturn (parseFloat(str.slice(0,-1)) * 1000) || undefined\n\t\t\t}\n\t\t\treturn parseFloat(str) || undefined\n        }\n\n        function getRawAttribute(elt, name) {\n            return elt.getAttribute && elt.getAttribute(name);\n        }\n\n        // resolve with both hx and data-hx prefixes\n        function hasAttribute(elt, qualifiedName) {\n            return elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n                elt.hasAttribute(\"data-\" + qualifiedName));\n        }\n\n        function getAttributeValue(elt, qualifiedName) {\n            return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, \"data-\" + qualifiedName);\n        }\n\n        function parentElt(elt) {\n            return elt.parentElement;\n        }\n\n        function getDocument() {\n            return document;\n        }\n\n        function getClosestMatch(elt, condition) {\n            if (condition(elt)) {\n                return elt;\n            } else if (parentElt(elt)) {\n                return getClosestMatch(parentElt(elt), condition);\n            } else {\n                return null;\n            }\n        }\n\n        function getClosestAttributeValue(elt, attributeName) {\n            var closestAttr = null;\n            getClosestMatch(elt, function (e) {\n                return closestAttr = getAttributeValue(e, attributeName);\n            });\n            return closestAttr;\n        }\n\n        function matches(elt, selector) {\n            // noinspection JSUnresolvedVariable\n            var matchesFunction = elt.matches ||\n                elt.matchesSelector || elt.msMatchesSelector || elt.mozMatchesSelector\n                || elt.webkitMatchesSelector || elt.oMatchesSelector;\n            return matchesFunction && matchesFunction.call(elt, selector);\n        }\n\n        function getStartTag(str) {\n            var tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n            var match = tagMatcher.exec( str );\n            if (match) {\n                return match[1].toLowerCase();\n            } else {\n                return \"\";\n            }\n        }\n\n        function parseHTML(resp, depth) {\n            var parser = new DOMParser();\n            var responseDoc = parser.parseFromString(resp, \"text/html\");\n            var responseNode = responseDoc.body;\n            while (depth > 0) {\n                depth--;\n                responseNode = responseNode.firstChild;\n            }\n            if (responseNode == null) {\n                responseNode = getDocument().createDocumentFragment();\n            }\n            return responseNode;\n        }\n\n        function makeFragment(resp) {\n            if (htmx.config.useTemplateFragments) {\n                var documentFragment = parseHTML(\"<body><template>\" + resp + \"</template></body>\", 0);\n                return documentFragment.querySelector('template').content;\n            } else {\n                var startTag = getStartTag(resp);\n                switch (startTag) {\n                    case \"thead\":\n                    case \"tbody\":\n                    case \"tfoot\":\n                    case \"colgroup\":\n                    case \"caption\":\n                        return parseHTML(\"<table>\" + resp + \"</table>\", 1);\n                    case \"col\":\n                        return parseHTML(\"<table><colgroup>\" + resp + \"</colgroup></table>\", 2);\n                    case \"tr\":\n                        return parseHTML(\"<table><tbody>\" + resp + \"</tbody></table>\", 2);\n                    case \"td\":\n                    case \"th\":\n                        return parseHTML(\"<table><tbody><tr>\" + resp + \"</tr></tbody></table>\", 3);\n                    case \"script\":\n                        return parseHTML(\"<div>\" + resp + \"</div>\", 1);\n                    default:\n                        return parseHTML(resp, 0);\n                }\n            }\n        }\n\n        function maybeCall(func){\n            if(func) {\n                func();\n            }\n        }\n\n        function isType(o, type) {\n            return Object.prototype.toString.call(o) === \"[object \" + type + \"]\";\n        }\n\n        function isFunction(o) {\n            return isType(o, \"Function\");\n        }\n\n        function isRawObject(o) {\n            return isType(o, \"Object\");\n        }\n\n        function getInternalData(elt) {\n            var dataProp = 'htmx-internal-data';\n            var data = elt[dataProp];\n            if (!data) {\n                data = elt[dataProp] = {};\n            }\n            return data;\n        }\n\n        function toArray(arr) {\n            var returnArr = [];\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    returnArr.push(arr[i]);\n                }\n            }\n            return returnArr\n        }\n\n        function forEach(arr, func) {\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    func(arr[i]);\n                }\n            }\n        }\n\n        function isScrolledIntoView(el) {\n            var rect = el.getBoundingClientRect();\n            var elemTop = rect.top;\n            var elemBottom = rect.bottom;\n            return elemTop < window.innerHeight && elemBottom >= 0;\n        }\n\n        function bodyContains(elt) {\n            return getDocument().body.contains(elt);\n        }\n\n        function splitOnWhitespace(trigger) {\n            return trigger.trim().split(/\\s+/);\n        }\n\n        function mergeObjects(obj1, obj2) {\n            for (var key in obj2) {\n                if (obj2.hasOwnProperty(key)) {\n                    obj1[key] = obj2[key];\n                }\n            }\n            return obj1;\n        }\n\n        function parseJSON(jString) {\n            try {\n                return JSON.parse(jString);\n            } catch(error) {\n                logError(error);\n                return null;\n            }\n        }\n\n        //==========================================================================================\n        // public API\n        //==========================================================================================\n\n        function internalEval(str){\n            return maybeEval(getDocument().body, function () {\n                return eval(str);\n            });\n        }\n\n        function onLoadHelper(callback) {\n            var value = htmx.on(\"htmx:load\", function(evt) {\n                callback(evt.detail.elt);\n            });\n            return value;\n        }\n\n        function logAll(){\n            htmx.logger = function(elt, event, data) {\n                if(console) {\n                    console.log(event, elt, data);\n                }\n            }\n        }\n\n        function find(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelector(selector);\n            } else {\n                return find(getDocument(), eltOrSelector);\n            }\n        }\n\n        function findAll(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelectorAll(selector);\n            } else {\n                return findAll(getDocument(), eltOrSelector);\n            }\n        }\n\n        function removeElement(elt, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){removeElement(elt);}, delay)\n            } else {\n                elt.parentElement.removeChild(elt);\n            }\n        }\n\n        function addClassToElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){addClassToElement(elt, clazz);}, delay)\n            } else {\n                elt.classList.add(clazz);\n            }\n        }\n\n        function removeClassFromElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){removeClassFromElement(elt, clazz);}, delay)\n            } else {\n                elt.classList.remove(clazz);\n            }\n        }\n\n        function toggleClassOnElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            elt.classList.toggle(clazz);\n        }\n\n        function takeClassForElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            forEach(elt.parentElement.children, function(child){\n                removeClassFromElement(child, clazz);\n            })\n            addClassToElement(elt, clazz);\n        }\n\n        function closest(elt, selector) {\n            elt = resolveTarget(elt);\n            if (elt.closest) {\n                return elt.closest(selector);\n            } else {\n                do{\n                    if (elt == null || matches(elt, selector)){\n                        return elt;\n                    }\n                }\n                while (elt = elt && parentElt(elt));\n            }\n        }\n\n        function querySelectorAllExt(elt, selector) {\n\t\t    if (selector.indexOf(\"closest \") === 0) {\n                return [closest(elt, selector.substr(8))];\n            } else if (selector.indexOf(\"find \") === 0) {\n                return [find(elt, selector.substr(5))];\n            } else {\n                return getDocument().querySelectorAll(selector);\n            }\n        }\n\n        function querySelectorExt(eltOrSelector, selector) {\n            return querySelectorAllExt(eltOrSelector, selector)[0]\n        }\n\n        function resolveTarget(arg2) {\n            if (isType(arg2, 'String')) {\n                return find(arg2);\n            } else {\n                return arg2;\n            }\n        }\n\n        function processEventArgs(arg1, arg2, arg3) {\n            if (isFunction(arg2)) {\n                return {\n                    target: getDocument().body,\n                    event: arg1,\n                    listener: arg2\n                }\n            } else {\n                return {\n                    target: resolveTarget(arg1),\n                    event: arg2,\n                    listener: arg3\n                }\n            }\n\n        }\n\n        function addEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener);\n            })\n            var b = isFunction(arg2);\n            return b ? arg2 : arg3;\n        }\n\n        function removeEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener);\n            })\n            return isFunction(arg2) ? arg2 : arg3;\n        }\n\n        //====================================================================\n        // Node processing\n        //====================================================================\n\n        function getTarget(elt) {\n            var explicitTarget = getClosestMatch(elt, function(e){return getAttributeValue(e,\"hx-target\") !== null});\n            if (explicitTarget) {\n                var targetStr = getAttributeValue(explicitTarget, \"hx-target\");\n                if (targetStr === \"this\") {\n                    return explicitTarget;\n                } else {\n                    return querySelectorExt(elt, targetStr)\n                }\n            } else {\n                var data = getInternalData(elt);\n                if (data.boosted) {\n                    return getDocument().body;\n                } else {\n                    return elt;\n                }\n            }\n        }\n\n        function shouldSettleAttribute(name) {\n            var attributesToSettle = htmx.config.attributesToSettle;\n            for (var i = 0; i < attributesToSettle.length; i++) {\n                if (name === attributesToSettle[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function cloneAttributes(mergeTo, mergeFrom) {\n            forEach(mergeTo.attributes, function (attr) {\n                if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n                    mergeTo.removeAttribute(attr.name)\n                }\n            });\n            forEach(mergeFrom.attributes, function (attr) {\n                if (shouldSettleAttribute(attr.name)) {\n                    mergeTo.setAttribute(attr.name, attr.value);\n                }\n            });\n        }\n\n        function isInlineSwap(swapStyle, target) {\n            var extensions = getExtensions(target);\n            for (var i = 0; i < extensions.length; i++) {\n                var extension = extensions[i];\n                try {\n                    if (extension.isInlineSwap(swapStyle)) {\n                        return true;\n                    }\n                } catch(e) {\n                    logError(e);\n                }\n            }\n            return swapStyle === \"outerHTML\";\n        }\n\n        function oobSwap(oobValue, oobElement, settleInfo) {\n            var selector = \"#\" + oobElement.id;\n            var swapStyle = \"outerHTML\";\n            if (oobValue === \"true\") {\n                // do nothing\n            } else if (oobValue.indexOf(\":\") > 0) {\n                swapStyle = oobValue.substr(0, oobValue.indexOf(\":\"));\n                selector  = oobValue.substr(oobValue.indexOf(\":\") + 1, oobValue.length);\n            } else {\n                swapStyle = oobValue;\n            }\n\n            var target = getDocument().querySelector(selector);\n            if (target) {\n                var fragment;\n                fragment = getDocument().createDocumentFragment();\n                fragment.appendChild(oobElement); // pulls the child out of the existing fragment\n                if (!isInlineSwap(swapStyle, target)) {\n                    fragment = oobElement; // if this is not an inline swap, we use the content of the node, not the node itself\n                }\n                swap(swapStyle, target, target, fragment, settleInfo);\n            } else {\n                oobElement.parentNode.removeChild(oobElement);\n                triggerErrorEvent(getDocument().body, \"htmx:oobErrorNoTarget\", {content: oobElement})\n            }\n            return oobValue;\n        }\n\n        function handleOutOfBandSwaps(fragment, settleInfo) {\n            forEach(findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]'), function (oobElement) {\n                var oobValue = getAttributeValue(oobElement, \"hx-swap-oob\");\n                if (oobValue != null) {\n                    oobSwap(oobValue, oobElement, settleInfo);\n                }\n            });\n        }\n\n        function handlePreservedElements(fragment) {\n            forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function (preservedElt) {\n                var id = getAttributeValue(preservedElt, \"id\");\n                var oldElt = getDocument().getElementById(id);\n                if (oldElt != null) {\n                    preservedElt.parentNode.replaceChild(oldElt, preservedElt);\n                }\n            });\n        }\n\n        function handleAttributes(parentNode, fragment, settleInfo) {\n            forEach(fragment.querySelectorAll(\"[id]\"), function (newNode) {\n                if (newNode.id && newNode.id.length > 0) {\n                    var oldNode = parentNode.querySelector(newNode.tagName + \"[id='\" + newNode.id + \"']\");\n                    if (oldNode && oldNode !== parentNode) {\n                        var newAttributes = newNode.cloneNode();\n                        cloneAttributes(newNode, oldNode);\n                        settleInfo.tasks.push(function () {\n                            cloneAttributes(newNode, newAttributes);\n                        });\n                    }\n                }\n            });\n        }\n\n        function makeAjaxLoadTask(child) {\n            return function () {\n                processNode(child);\n                processScripts(child);\n                processFocus(child)\n                triggerEvent(child, 'htmx:load');\n            };\n        }\n\n        function processFocus(child) {\n            var autofocus = \"[autofocus]\";\n            var autoFocusedElt = matches(child, autofocus) ? child : child.querySelector(autofocus)\n            if (autoFocusedElt != null) {\n                autoFocusedElt.focus();\n            }\n        }\n\n        function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n            handleAttributes(parentNode, fragment, settleInfo);\n            while(fragment.childNodes.length > 0){\n                var child = fragment.firstChild;\n                parentNode.insertBefore(child, insertBefore);\n                if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child));\n                }\n            }\n        }\n\n        function cleanUpElement(element) {\n            var internalData = getInternalData(element);\n            if (internalData.webSocket) {\n                internalData.webSocket.close();\n            }\n            if (internalData.sseEventSource) {\n                internalData.sseEventSource.close();\n            }\n            if (internalData.listenerInfos) {\n                forEach(internalData.listenerInfos, function(info) {\n                    if (element !== info.on) {\n                        info.on.removeEventListener(info.trigger, info.listener);\n                    }\n                });\n            }\n            if (element.children) { // IE\n                forEach(element.children, function(child) { cleanUpElement(child) });\n            }\n        }\n\n        function swapOuterHTML(target, fragment, settleInfo) {\n            if (target.tagName === \"BODY\") {\n                return swapInnerHTML(target, fragment, settleInfo);\n            } else {\n                var eltBeforeNewContent = target.previousSibling;\n                insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n                if (eltBeforeNewContent == null) {\n                    var newElt = parentElt(target).firstChild;\n                } else {\n                    var newElt = eltBeforeNewContent.nextSibling;\n                }\n                getInternalData(target).replacedWith = newElt; // tuck away so we can fire events on it later\n                settleInfo.elts = [] // clear existing elements\n                while(newElt && newElt !== target) {\n                    if (newElt.nodeType === Node.ELEMENT_NODE) {\n                        settleInfo.elts.push(newElt);\n                    }\n                    newElt = newElt.nextElementSibling;\n                }\n                cleanUpElement(target);\n                parentElt(target).removeChild(target);\n            }\n        }\n\n        function swapAfterBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(target, target.firstChild, fragment, settleInfo);\n        }\n\n        function swapBeforeBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n        }\n\n        function swapBeforeEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(target, null, fragment, settleInfo);\n        }\n\n        function swapAfterEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo);\n        }\n\n        function swapInnerHTML(target, fragment, settleInfo) {\n            var firstChild = target.firstChild;\n            insertNodesBefore(target, firstChild, fragment, settleInfo);\n            if (firstChild) {\n                while (firstChild.nextSibling) {\n                    cleanUpElement(firstChild.nextSibling)\n                    target.removeChild(firstChild.nextSibling);\n                }\n                cleanUpElement(firstChild)\n                target.removeChild(firstChild);\n            }\n        }\n\n        function maybeSelectFromResponse(elt, fragment) {\n            var selector = getClosestAttributeValue(elt, \"hx-select\");\n            if (selector) {\n                var newFragment = getDocument().createDocumentFragment();\n                forEach(fragment.querySelectorAll(selector), function (node) {\n                    newFragment.appendChild(node);\n                });\n                fragment = newFragment;\n            }\n            return fragment;\n        }\n\n        function swap(swapStyle, elt, target, fragment, settleInfo) {\n            switch (swapStyle) {\n                case \"none\":\n                    return;\n                case \"outerHTML\":\n                    swapOuterHTML(target, fragment, settleInfo);\n                    return;\n                case \"afterbegin\":\n                    swapAfterBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforebegin\":\n                    swapBeforeBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforeend\":\n                    swapBeforeEnd(target, fragment, settleInfo);\n                    return;\n                case \"afterend\":\n                    swapAfterEnd(target, fragment, settleInfo);\n                    return;\n                default:\n                    var extensions = getExtensions(elt);\n                    for (var i = 0; i < extensions.length; i++) {\n                        var ext = extensions[i];\n                        try {\n                            var newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo);\n                            if (newElements) {\n                                if (typeof newElements.length !== 'undefined') {\n                                    // if handleSwap returns an array (like) of elements, we handle them\n                                    for (var j = 0; j < newElements.length; j++) {\n                                        var child = newElements[j];\n                                        if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                                            settleInfo.tasks.push(makeAjaxLoadTask(child));\n                                        }\n                                    }\n                                }\n                                return;\n                            }\n                        } catch (e) {\n                            logError(e);\n                        }\n                    }\n                    swapInnerHTML(target, fragment, settleInfo);\n            }\n        }\n\n        var TITLE_FINDER = /<title>([\\s\\S]+?)<\\/title>/im;\n        function findTitle(content) {\n            if(content.indexOf('<title>') > -1 &&\n                (content.indexOf('<svg>') == -1 ||\n                    content.indexOf('<title>') < content.indexOf('<svg>'))) {\n                var result = TITLE_FINDER.exec(content);\n                if (result) {\n                    return result[1];\n                }\n            }\n        }\n\n        function selectAndSwap(swapStyle, target, elt, responseText, settleInfo) {\n            var title = findTitle(responseText);\n            if(title) {\n                var titleElt = find(\"title\");\n                if(titleElt) {\n                    titleElt.innerHTML = title;\n                } else {\n                    window.document.title = title;\n                }\n            }\n            var fragment = makeFragment(responseText);\n            if (fragment) {\n                handleOutOfBandSwaps(fragment, settleInfo);\n                fragment = maybeSelectFromResponse(elt, fragment);\n                handlePreservedElements(fragment);\n                return swap(swapStyle, elt, target, fragment, settleInfo);\n            }\n        }\n\n        function handleTrigger(xhr, header, elt) {\n            var triggerBody = xhr.getResponseHeader(header);\n            if (triggerBody.indexOf(\"{\") === 0) {\n                var triggers = parseJSON(triggerBody);\n                for (var eventName in triggers) {\n                    if (triggers.hasOwnProperty(eventName)) {\n                        var detail = triggers[eventName];\n                        if (!isRawObject(detail)) {\n                            detail = {\"value\": detail}\n                        }\n                        triggerEvent(elt, eventName, detail);\n                    }\n                }\n            } else {\n                triggerEvent(elt, triggerBody, []);\n            }\n        }\n\n        var WHITESPACE = /\\s/;\n        var WHITESPACE_OR_COMMA = /[\\s,]/;\n        var SYMBOL_START = /[_$a-zA-Z]/;\n        var SYMBOL_CONT = /[_$a-zA-Z0-9]/;\n        var STRINGISH_START = ['\"', \"'\", \"/\"];\n        var NOT_WHITESPACE = /[^\\s]/;\n        function tokenizeString(str) {\n            var tokens = [];\n            var position = 0;\n            while (position < str.length) {\n                if(SYMBOL_START.exec(str.charAt(position))) {\n                    var startPosition = position;\n                    while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n                    var startChar = str.charAt(position);\n                    var startPosition = position;\n                    position++;\n                    while (position < str.length && str.charAt(position) !== startChar ) {\n                        if (str.charAt(position) === \"\\\\\") {\n                            position++;\n                        }\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else {\n                    var symbol = str.charAt(position);\n                    tokens.push(symbol);\n                }\n                position++;\n            }\n            return tokens;\n        }\n\n        function isPossibleRelativeReference(token, last, paramName) {\n            return SYMBOL_START.exec(token.charAt(0)) &&\n                token !== \"true\" &&\n                token !== \"false\" &&\n                token !== \"this\" &&\n                token !== paramName &&\n                last !== \".\";\n        }\n\n        function maybeGenerateConditional(elt, tokens, paramName) {\n            if (tokens[0] === '[') {\n                tokens.shift();\n                var bracketCount = 1;\n                var conditionalSource = \" return (function(\" + paramName + \"){ return (\";\n                var last = null;\n                while (tokens.length > 0) {\n                    var token = tokens[0];\n                    if (token === \"]\") {\n                        bracketCount--;\n                        if (bracketCount === 0) {\n                            if (last === null) {\n                                conditionalSource = conditionalSource + \"true\";\n                            }\n                            tokens.shift();\n                            conditionalSource += \")})\";\n                            try {\n                                var conditionFunction = maybeEval(elt,function () {\n                                    return Function(conditionalSource)();\n                                    },\n                                    function(){return true})\n                                conditionFunction.source = conditionalSource;\n                                return conditionFunction;\n                            } catch (e) {\n                                triggerErrorEvent(getDocument().body, \"htmx:syntax:error\", {error:e, source:conditionalSource})\n                                return null;\n                            }\n                        }\n                    } else if (token === \"[\") {\n                        bracketCount++;\n                    }\n                    if (isPossibleRelativeReference(token, last, paramName)) {\n                            conditionalSource += \"((\" + paramName + \".\" + token + \") ? (\" + paramName + \".\" + token + \") : (window.\" + token + \"))\";\n                    } else {\n                        conditionalSource = conditionalSource + token;\n                    }\n                    last = tokens.shift();\n                }\n            }\n        }\n\n        function consumeUntil(tokens, match) {\n            var result = \"\";\n            while (tokens.length > 0 && !tokens[0].match(match)) {\n                result += tokens.shift();\n            }\n            return result;\n        }\n\n        var INPUT_SELECTOR = 'input, textarea, select';\n        function getTriggerSpecs(elt) {\n            var explicitTrigger = getAttributeValue(elt, 'hx-trigger');\n            var triggerSpecs = [];\n            if (explicitTrigger) {\n                var tokens = tokenizeString(explicitTrigger);\n                do {\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    var initialLength = tokens.length;\n                    var trigger = consumeUntil(tokens, /[,\\[\\s]/);\n                    if (trigger !== \"\") {\n                        if (trigger === \"every\") {\n                            var every = {trigger: 'every'};\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            every.pollInterval = parseInterval(consumeUntil(tokens, WHITESPACE));\n                            triggerSpecs.push(every);\n                        } else if (trigger.indexOf(\"sse:\") === 0) {\n                            triggerSpecs.push({trigger: 'sse', sseEvent: trigger.substr(4)});\n                        } else {\n                            var triggerSpec = {trigger: trigger};\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                triggerSpec.eventFilter = eventFilter;\n                            }\n                            while (tokens.length > 0 && tokens[0] !== \",\") {\n                                consumeUntil(tokens, NOT_WHITESPACE)\n                                var token = tokens.shift();\n                                if (token === \"changed\") {\n                                    triggerSpec.changed = true;\n                                } else if (token === \"once\") {\n                                    triggerSpec.once = true;\n                                } else if (token === \"consume\") {\n                                    triggerSpec.consume = true;\n                                } else if (token === \"delay\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"from\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.from = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if (token === \"target\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.target = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if (token === \"throttle\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"queue\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if ((token === \"root\" || token === \"threshold\") && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else {\n                                    triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                                }\n                            }\n                            triggerSpecs.push(triggerSpec);\n                        }\n                    }\n                    if (tokens.length === initialLength) {\n                        triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                    }\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                } while (tokens[0] === \",\" && tokens.shift())\n            }\n\n            if (triggerSpecs.length > 0) {\n                return triggerSpecs;\n            } else if (matches(elt, 'form')) {\n                return [{trigger: 'submit'}];\n            } else if (matches(elt, INPUT_SELECTOR)) {\n                return [{trigger: 'change'}];\n            } else {\n                return [{trigger: 'click'}];\n            }\n        }\n\n        function cancelPolling(elt) {\n            getInternalData(elt).cancelled = true;\n        }\n\n        function processPolling(elt, verb, path, interval) {\n            var nodeData = getInternalData(elt);\n            nodeData.timeout = setTimeout(function () {\n                if (bodyContains(elt) && nodeData.cancelled !== true) {\n                    issueAjaxRequest(verb, path, elt);\n                    processPolling(elt, verb, getAttributeValue(elt, \"hx-\" + verb), interval);\n                }\n            }, interval);\n        }\n\n        function isLocalLink(elt) {\n            return location.hostname === elt.hostname &&\n                getRawAttribute(elt,'href') &&\n                getRawAttribute(elt,'href').indexOf(\"#\") !== 0;\n        }\n\n        function boostElement(elt, nodeData, triggerSpecs) {\n            if ((elt.tagName === \"A\" && isLocalLink(elt)) || elt.tagName === \"FORM\") {\n                nodeData.boosted = true;\n                var verb, path;\n                if (elt.tagName === \"A\") {\n                    verb = \"get\";\n                    path = getRawAttribute(elt, 'href');\n                    nodeData.pushURL = true;\n                } else {\n                    var rawAttribute = getRawAttribute(elt, \"method\");\n                    verb = rawAttribute ? rawAttribute.toLowerCase() : \"get\";\n                    if (verb === \"get\") {\n                        nodeData.pushURL = true;\n                    }\n                    path = getRawAttribute(elt, 'action');\n                }\n                triggerSpecs.forEach(function(triggerSpec) {\n                    addEventListener(elt, verb, path, nodeData, triggerSpec, true);\n                });\n            }\n        }\n\n        function shouldCancel(elt) {\n            return elt.tagName === \"FORM\" ||\n                (matches(elt, 'input[type=\"submit\"], button') && closest(elt, 'form') !== null) ||\n                (elt.tagName === \"A\" && elt.href && (elt.getAttribute('href') === '#' ||\n                                                     elt.getAttribute('href').indexOf(\"#\") !== 0));\n        }\n\n        function ignoreBoostedAnchorCtrlClick(elt, evt) {\n            return getInternalData(elt).boosted && elt.tagName === \"A\" && evt.type === \"click\" && (evt.ctrlKey || evt.metaKey);\n        }\n\n        function maybeFilterEvent(triggerSpec, evt) {\n            var eventFilter = triggerSpec.eventFilter;\n            if(eventFilter){\n                try {\n                    return eventFilter(evt) !== true;\n                } catch(e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:eventFilter:error\", {error: e, source:eventFilter.source});\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function addEventListener(elt, verb, path, nodeData, triggerSpec, explicitCancel) {\n            var eltToListenOn = elt;\n            if (triggerSpec.from) {\n                eltToListenOn = find(triggerSpec.from);\n            }\n            var eventListener = function (evt) {\n                if (!bodyContains(elt)) {\n                    eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener);\n                    return;\n                }\n                if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n                    return;\n                }\n                if(explicitCancel || shouldCancel(elt)){\n                    evt.preventDefault();\n                }\n                if (maybeFilterEvent(triggerSpec, evt)) {\n                    return;\n                }\n                var eventData = getInternalData(evt);\n                eventData.triggerSpec = triggerSpec;\n                if (eventData.handledFor == null) {\n                    eventData.handledFor = [];\n                }\n                var elementData = getInternalData(elt);\n                if (eventData.handledFor.indexOf(elt) < 0) {\n                    eventData.handledFor.push(elt);\n                    if (triggerSpec.consume) {\n                        evt.stopPropagation();\n                    }\n                    if (triggerSpec.target && evt.target) {\n                        if (!matches(evt.target, triggerSpec.target)) {\n                            return;\n                        }\n                    }\n                    if (triggerSpec.once) {\n                        if (elementData.triggeredOnce) {\n                            return;\n                        } else {\n                            elementData.triggeredOnce = true;\n                        }\n                    }\n                    if (triggerSpec.changed) {\n                        if (elementData.lastValue === elt.value) {\n                            return;\n                        } else {\n                            elementData.lastValue = elt.value;\n                        }\n                    }\n                    if (elementData.delayed) {\n                        clearTimeout(elementData.delayed);\n                    }\n                    if (elementData.throttle) {\n                        return;\n                    }\n\n                    if (triggerSpec.throttle) {\n                        if(!elementData.throttle) {\n                            issueAjaxRequest(verb, path, elt, evt);\n                            elementData.throttle = setTimeout(function(){\n                                elementData.throttle = null;\n                            }, triggerSpec.throttle);\n                        }\n                    } else if (triggerSpec.delay) {\n                        elementData.delayed = setTimeout(function(){\n                            issueAjaxRequest(verb, path, elt, evt);\n                        }, triggerSpec.delay);\n                    } else {\n                        issueAjaxRequest(verb, path, elt, evt);\n                    }\n                }\n            };\n            if (nodeData.listenerInfos == null) {\n                nodeData.listenerInfos = [];\n            }\n            nodeData.listenerInfos.push({\n                trigger: triggerSpec.trigger,\n                listener: eventListener,\n                on: eltToListenOn\n            })\n            eltToListenOn.addEventListener(triggerSpec.trigger, eventListener);\n        }\n\n        var windowIsScrolling = false // used by initScrollHandler\n        var scrollHandler = null;\n        function initScrollHandler() {\n            if (!scrollHandler) {\n                scrollHandler = function() {\n                    windowIsScrolling = true\n                };\n                window.addEventListener(\"scroll\", scrollHandler)\n                setInterval(function() {\n                    if (windowIsScrolling) {\n                        windowIsScrolling = false;\n                        forEach(getDocument().querySelectorAll(\"[hx-trigger='revealed'],[data-hx-trigger='revealed']\"), function (elt) {\n                            maybeReveal(elt);\n                        })\n                    }\n                }, 200);\n            }\n        }\n\n        function maybeReveal(elt) {\n            var nodeData = getInternalData(elt);\n            if (!nodeData.revealed && isScrolledIntoView(elt)) {\n                nodeData.revealed = true;\n                if (nodeData.initialized) {\n                    issueAjaxRequest(nodeData.verb, nodeData.path, elt);\n                } else {\n                    // if the node isn't initialized, wait for it before triggering the request\n                    elt.addEventListener(\"htmx:afterProcessNode\",\n                        function () {\n                            issueAjaxRequest(nodeData.verb, nodeData.path, elt);\n                        }, {once: true});\n                }\n            }\n        }\n\n        function processWebSocketInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    ensureWebSocket(elt, value[1], 0);\n                }\n                if (value[0] === \"send\") {\n                    processWebSocketSend(elt);\n                }\n            }\n        }\n\n        function ensureWebSocket(elt, wssSource, retryCount) {\n            if (!bodyContains(elt)) {\n                return;  // stop ensuring websocket connection when socket bearing element ceases to exist\n            }\n\n            if (wssSource.indexOf(\"/\") == 0) {  // complete absolute paths only\n                var base_part = location.hostname + (location.port ? ':'+location.port: '');\n                if (location.protocol == 'https:') {\n                    wssSource = \"wss://\" + base_part + wssSource;\n                } else if (location.protocol == 'http:') {\n                    wssSource = \"ws://\" + base_part + wssSource;\n                }\n            }\n            var socket = htmx.createWebSocket(wssSource);\n            socket.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:wsError\", {error:e, socket:socket});\n                maybeCloseWebSocketSource(elt);\n            };\n\n            socket.onclose = function (e) {\n                if ([1006, 1012, 1013].includes(e.code)) {  // Abnormal Closure/Service Restart/Try Again Later\n                    var delay = getWebSocketReconnectDelay(retryCount);\n                    setTimeout(function() {\n                        ensureWebSocket(elt, wssSource, retryCount+1);  // creates a websocket with a new timeout\n                    }, delay);\n                }\n            };\n            socket.onopen = function (e) {\n                retryCount = 0;\n            }\n\n            getInternalData(elt).webSocket = socket;\n            socket.addEventListener('message', function (event) {\n                if (maybeCloseWebSocketSource(elt)) {\n                    return;\n                }\n\n                var response = event.data;\n                withExtensions(elt, function(extension){\n                    response = extension.transformResponse(response, null, elt);\n                });\n\n                var settleInfo = makeSettleInfo(elt);\n                var fragment = makeFragment(response);\n                var children = toArray(fragment.children);\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    oobSwap(getAttributeValue(child, \"hx-swap-oob\") || \"true\", child, settleInfo);\n                }\n\n                settleImmediately(settleInfo.tasks);\n            });\n        }\n\n        function maybeCloseWebSocketSource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).webSocket.close();\n                return true;\n            }\n        }\n\n        function processWebSocketSend(elt) {\n            var webSocketSourceElt = getClosestMatch(elt, function (parent) {\n                return getInternalData(parent).webSocket != null;\n            });\n            if (webSocketSourceElt) {\n                elt.addEventListener(getTriggerSpecs(elt)[0].trigger, function (evt) {\n                    var webSocket = getInternalData(webSocketSourceElt).webSocket;\n                    var headers = getHeaders(elt, webSocketSourceElt);\n                    var results = getInputValues(elt, 'post');\n                    var errors = results.errors;\n                    var rawParameters = results.values;\n                    var expressionVars = getExpressionVars(elt);\n                    var allParameters = mergeObjects(rawParameters, expressionVars);\n                    var filteredParameters = filterValues(allParameters, elt);\n                    filteredParameters['HEADERS'] = headers;\n                    if (errors && errors.length > 0) {\n                        triggerEvent(elt, 'htmx:validation:halted', errors);\n                        return;\n                    }\n                    webSocket.send(JSON.stringify(filteredParameters));\n                    if(shouldCancel(elt)){\n                        evt.preventDefault();\n                    }\n                });\n            } else {\n                triggerErrorEvent(elt, \"htmx:noWebSocketSourceError\");\n            }\n        }\n\n        function getWebSocketReconnectDelay(retryCount) {\n            var delay = htmx.config.wsReconnectDelay;\n            if (typeof delay === 'function') {\n                return delay(retryCount);\n            }\n            if (delay === 'full-jitter') {\n                var exp = Math.min(retryCount, 6);\n                var maxDelay = 1000 * Math.pow(2, exp);\n                return maxDelay * Math.random();\n            }\n            logError('htmx.config.wsReconnectDelay must either be a function or the string \"full-jitter\"');\n        }\n\n        //====================================================================\n        // Server Sent Events\n        //====================================================================\n\n        function processSSEInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    processSSESource(elt, value[1]);\n                }\n\n                if ((value[0] === \"swap\")) {\n                    processSSESwap(elt, value[1])\n                }\n            }\n        }\n\n        function processSSESource(elt, sseSrc) {\n            var source = htmx.createEventSource(sseSrc);\n            source.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:sseError\", {error:e, source:source});\n                maybeCloseSSESource(elt);\n            };\n            getInternalData(elt).sseEventSource = source;\n        }\n\n        function processSSESwap(elt, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function (event) {\n                    if (maybeCloseSSESource(sseSourceElt)) {\n                        sseEventSource.removeEventListener(sseEventName, sseListener);\n                        return;\n                    }\n\n                    ///////////////////////////\n                    // TODO: merge this code with AJAX and WebSockets code in the future.\n\n                    var response = event.data;\n                    withExtensions(elt, function(extension){\n                        response = extension.transformResponse(response, null, elt);\n                    });\n\n                    var swapSpec = getSwapSpecification(elt)\n                    var target = getTarget(elt)\n                    var settleInfo = makeSettleInfo(elt);\n\n                    selectAndSwap(swapSpec.swapStyle, elt, target, response, settleInfo)\n                    settleImmediately(settleInfo.tasks)\n                    triggerEvent(elt, \"htmx:sseMessage\", event)\n                };\n\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function processSSETrigger(elt, verb, path, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function () {\n                    if (!maybeCloseSSESource(sseSourceElt)) {\n                        if (bodyContains(elt)) {\n                            issueAjaxRequest(verb, path, elt);\n                        } else {\n                            sseEventSource.removeEventListener(sseEventName, sseListener);\n                        }\n                    }\n                };\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function maybeCloseSSESource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).sseEventSource.close();\n                return true;\n            }\n        }\n\n        function hasEventSource(node) {\n            return getInternalData(node).sseEventSource != null;\n        }\n\n        //====================================================================\n\n        function loadImmediately(elt, verb, path, nodeData, delay) {\n            var load = function(){\n                if (!nodeData.loaded) {\n                    nodeData.loaded = true;\n                    issueAjaxRequest(verb, path, elt);\n                }\n            }\n            if (delay) {\n                setTimeout(load, delay);\n            } else {\n                load();\n            }\n        }\n\n        function processVerbs(elt, nodeData, triggerSpecs) {\n            var explicitAction = false;\n            forEach(VERBS, function (verb) {\n                if (hasAttribute(elt,'hx-' + verb)) {\n                    var path = getAttributeValue(elt, 'hx-' + verb);\n                    explicitAction = true;\n                    nodeData.path = path;\n                    nodeData.verb = verb;\n                    triggerSpecs.forEach(function(triggerSpec) {\n                        if (triggerSpec.sseEvent) {\n                            processSSETrigger(elt, verb, path, triggerSpec.sseEvent);\n                        } else if (triggerSpec.trigger === \"revealed\") {\n                            initScrollHandler();\n                            maybeReveal(elt);\n                        } else if (triggerSpec.trigger === \"intersect\") {\n                            var observerOptions = {};\n                            if (triggerSpec.root) {\n                                observerOptions.root = querySelectorExt(triggerSpec.root)\n                            }\n                            if (triggerSpec.threshold) {\n                                observerOptions.threshold = parseFloat(triggerSpec.threshold);\n                            }\n                            var observer = new IntersectionObserver(function (entries) {\n                                for (var i = 0; i < entries.length; i++) {\n                                    var entry = entries[i];\n                                    if (entry.isIntersecting) {\n                                        triggerEvent(elt, \"intersect\");\n                                        break;\n                                    }\n                                }\n                            }, observerOptions);\n                            observer.observe(elt);\n                            addEventListener(elt, verb, path, nodeData, triggerSpec);\n                        } else if (triggerSpec.trigger === \"load\") {\n                            loadImmediately(elt, verb, path, nodeData, triggerSpec.delay);\n                        } else if (triggerSpec.pollInterval) {\n                            nodeData.polling = true;\n                            processPolling(elt, verb, path, triggerSpec.pollInterval);\n                        } else {\n                            addEventListener(elt, verb, path, nodeData, triggerSpec);\n                        }\n                    });\n                }\n            });\n            return explicitAction;\n        }\n\n        function evalScript(script) {\n            if (script.type === \"text/javascript\" || script.type === \"\") {\n                try {\n                    maybeEval(script, function () {\n                        // wtf - https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n                        (1, eval)(script.innerText);\n                    });\n                } catch (e) {\n                    logError(e);\n                }\n            }\n        }\n\n        function processScripts(elt) {\n            if (matches(elt, \"script\")) {\n                evalScript(elt);\n            }\n            forEach(findAll(elt, \"script\"), function (script) {\n                evalScript(script);\n            });\n        }\n\n        function isBoosted() {\n            return document.querySelector(\"[hx-boost], [data-hx-boost]\");\n        }\n\n        function findElementsToProcess(elt) {\n            if (elt.querySelectorAll) {\n                var boostedElts = isBoosted() ? \", a, form\" : \"\";\n                var results = elt.querySelectorAll(VERB_SELECTOR + boostedElts + \", [hx-sse], [data-hx-sse], [hx-ws],\" +\n                    \" [data-hx-ws]\");\n                return results;\n            } else {\n                return [];\n            }\n        }\n\n        function initNode(elt) {\n            if (elt.closest && elt.closest(htmx.config.disableSelector)) {\n                return;\n            }\n            var nodeData = getInternalData(elt);\n            if (!nodeData.initialized) {\n                nodeData.initialized = true;\n                triggerEvent(elt, \"htmx:beforeProcessNode\")\n\n                if (elt.value) {\n                    nodeData.lastValue = elt.value;\n                }\n\n                var triggerSpecs = getTriggerSpecs(elt);\n                var explicitAction = processVerbs(elt, nodeData, triggerSpecs);\n\n                if (!explicitAction && getClosestAttributeValue(elt, \"hx-boost\") === \"true\") {\n                    boostElement(elt, nodeData, triggerSpecs);\n                }\n\n                var sseInfo = getAttributeValue(elt, 'hx-sse');\n                if (sseInfo) {\n                    processSSEInfo(elt, nodeData, sseInfo);\n                }\n\n                var wsInfo = getAttributeValue(elt, 'hx-ws');\n                if (wsInfo) {\n                    processWebSocketInfo(elt, nodeData, wsInfo);\n                }\n                triggerEvent(elt, \"htmx:afterProcessNode\");\n            }\n        }\n\n        function processNode(elt) {\n            elt = resolveTarget(elt);\n            initNode(elt);\n            forEach(findElementsToProcess(elt), function(child) { initNode(child) });\n        }\n\n        //====================================================================\n        // Event/Log Support\n        //====================================================================\n\n        function kebabEventName(str) {\n            return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n        }\n\n        function makeEvent(eventName, detail) {\n            var evt;\n            if (window.CustomEvent && typeof window.CustomEvent === 'function') {\n                evt = new CustomEvent(eventName, {bubbles: true, cancelable: true, detail: detail});\n            } else {\n                evt = getDocument().createEvent('CustomEvent');\n                evt.initCustomEvent(eventName, true, true, detail);\n            }\n            return evt;\n        }\n\n        function triggerErrorEvent(elt, eventName, detail) {\n            triggerEvent(elt, eventName, mergeObjects({error:eventName}, detail));\n        }\n\n        function ignoreEventForLogging(eventName) {\n            return eventName === \"htmx:afterProcessNode\"\n        }\n\n        function withExtensions(elt, toDo) {\n            forEach(getExtensions(elt), function(extension){\n                try {\n                    toDo(extension);\n                } catch (e) {\n                    logError(e);\n                }\n            });\n        }\n\n        function logError(msg) {\n            if(console.error) {\n                console.error(msg);\n            } else if (console.log) {\n                console.log(\"ERROR: \", msg);\n            }\n        }\n\n        function triggerEvent(elt, eventName, detail) {\n            elt = resolveTarget(elt);\n            if (detail == null) {\n                detail = {};\n            }\n            detail[\"elt\"] = elt;\n            var event = makeEvent(eventName, detail);\n            if (htmx.logger && !ignoreEventForLogging(eventName)) {\n                htmx.logger(elt, eventName, detail);\n            }\n            if (detail.error) {\n                logError(detail.error);\n                triggerEvent(elt, \"htmx:error\", {errorInfo:detail})\n            }\n            var eventResult = elt.dispatchEvent(event);\n            var kebabName = kebabEventName(eventName);\n            if (eventResult && kebabName !== eventName) {\n                var kebabedEvent = makeEvent(kebabName, event.detail);\n                eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n            }\n            withExtensions(elt, function (extension) {\n                eventResult = eventResult && (extension.onEvent(eventName, event) !== false)\n            });\n            return eventResult;\n        }\n\n        //====================================================================\n        // History Support\n        //====================================================================\n        var currentPathForHistory = null;\n\n        function getHistoryElement() {\n            var historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]');\n            return historyElt || getDocument().body;\n        }\n\n        function saveToHistoryCache(url, content, title, scroll) {\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    historyCache.splice(i, 1);\n                    break;\n                }\n            }\n            historyCache.push({url:url, content: content, title:title, scroll:scroll})\n            while (historyCache.length > htmx.config.historyCacheSize) {\n                historyCache.shift();\n            }\n            while(historyCache.length > 0){\n                try {\n                    localStorage.setItem(\"htmx-history-cache\", JSON.stringify(historyCache));\n                    break;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheError\", {cause:e, cache: historyCache})\n                    historyCache.shift(); // shrink the cache and retry\n                }\n            }\n        }\n\n        function getCachedHistory(url) {\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    return historyCache[i];\n                }\n            }\n            return null;\n        }\n\n        function cleanInnerHtmlForHistory(elt) {\n            var className = htmx.config.requestClass;\n            var clone = elt.cloneNode(true);\n            forEach(findAll(clone, \".\" + className), function(child){\n                removeClassFromElement(child, className);\n            });\n            return clone.innerHTML;\n        }\n\n        function saveHistory() {\n            var elt = getHistoryElement();\n            var path = currentPathForHistory || location.pathname+location.search;\n            triggerEvent(getDocument().body, \"htmx:beforeHistorySave\", {path:path, historyElt:elt});\n            if(htmx.config.historyEnabled) history.replaceState({htmx:true}, getDocument().title, window.location.href);\n            saveToHistoryCache(path, cleanInnerHtmlForHistory(elt), getDocument().title, window.scrollY);\n        }\n\n        function pushUrlIntoHistory(path) {\n            if(htmx.config.historyEnabled)  history.pushState({htmx:true}, \"\", path);\n            currentPathForHistory = path;\n        }\n\n        function settleImmediately(tasks) {\n            forEach(tasks, function (task) {\n                task.call();\n            });\n        }\n\n        function loadHistoryFromServer(path) {\n            var request = new XMLHttpRequest();\n            var details = {path: path, xhr:request};\n            triggerEvent(getDocument().body, \"htmx:historyCacheMiss\", details);\n            request.open('GET', path, true);\n            request.setRequestHeader(\"HX-History-Restore-Request\", \"true\");\n            request.onload = function () {\n                if (this.status >= 200 && this.status < 400) {\n                    triggerEvent(getDocument().body, \"htmx:historyCacheMissLoad\", details);\n                    var fragment = makeFragment(this.response);\n                    fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment;\n                    var historyElement = getHistoryElement();\n                    var settleInfo = makeSettleInfo(historyElement);\n                    swapInnerHTML(historyElement, fragment, settleInfo)\n                    settleImmediately(settleInfo.tasks);\n                    currentPathForHistory = path;\n                    triggerEvent(getDocument().body, \"htmx:historyRestore\", {path:path});\n                } else {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheMissLoadError\", details);\n                }\n            };\n            request.send();\n        }\n\n        function restoreHistory(path) {\n            saveHistory();\n            path = path || location.pathname+location.search;\n            var cached = getCachedHistory(path);\n            if (cached) {\n                var fragment = makeFragment(cached.content);\n                var historyElement = getHistoryElement();\n                var settleInfo = makeSettleInfo(historyElement);\n                swapInnerHTML(historyElement, fragment, settleInfo)\n                settleImmediately(settleInfo.tasks);\n                document.title = cached.title;\n                window.scrollTo(0, cached.scroll);\n                currentPathForHistory = path;\n                triggerEvent(getDocument().body, \"htmx:historyRestore\", {path:path});\n            } else {\n                if (htmx.config.refreshOnHistoryMiss) {\n                    window.location.reload(true);\n                } else {\n                    loadHistoryFromServer(path);\n                }\n            }\n        }\n\n        function shouldPush(elt) {\n            var pushUrl = getClosestAttributeValue(elt, \"hx-push-url\");\n            return (pushUrl && pushUrl !== \"false\") ||\n                (getInternalData(elt).boosted && getInternalData(elt).pushURL);\n        }\n\n        function getPushUrl(elt) {\n            var pushUrl = getClosestAttributeValue(elt, \"hx-push-url\");\n            return (pushUrl === \"true\" || pushUrl === \"false\") ? null : pushUrl;\n        }\n\n        function addRequestIndicatorClasses(elt) {\n            var indicator = getClosestAttributeValue(elt, 'hx-indicator');\n            if (indicator) {\n                var indicators = querySelectorAllExt(elt, indicator);\n            } else {\n                indicators = [elt];\n            }\n            forEach(indicators, function (ic) {\n                ic.classList[\"add\"].call(ic.classList, htmx.config.requestClass);\n            });\n            return indicators;\n        }\n\n        function removeRequestIndicatorClasses(indicators) {\n            forEach(indicators, function (ic) {\n                ic.classList[\"remove\"].call(ic.classList, htmx.config.requestClass);\n            });\n        }\n\n        //====================================================================\n        // Input Value Processing\n        //====================================================================\n\n        function haveSeenNode(processed, elt) {\n            for (var i = 0; i < processed.length; i++) {\n                var node = processed[i];\n                if (node.isSameNode(elt)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function shouldInclude(elt) {\n            if(elt.name === \"\" || elt.name == null || elt.disabled) {\n                return false;\n            }\n            // ignore \"submitter\" types (see jQuery src/serialize.js)\n            if (elt.type === \"button\" || elt.type === \"submit\" || elt.tagName === \"image\" || elt.tagName === \"reset\" || elt.tagName === \"file\" ) {\n                return false;\n            }\n            if (elt.type === \"checkbox\" || elt.type === \"radio\" ) {\n                return elt.checked;\n            }\n            return true;\n        }\n\n        function processInputValue(processed, values, errors, elt, validate) {\n            if (elt == null || haveSeenNode(processed, elt)) {\n                return;\n            } else {\n                processed.push(elt);\n            }\n            if (shouldInclude(elt)) {\n                var name = getRawAttribute(elt,\"name\");\n                var value = elt.value;\n                if (elt.multiple) {\n                    value = toArray(elt.querySelectorAll(\"option:checked\")).map(function (e) { return e.value });\n                }\n                // include file inputs\n                if (elt.files) {\n                    value = toArray(elt.files);\n                }\n                // This is a little ugly because both the current value of the named value in the form\n                // and the new value could be arrays, so we have to handle all four cases :/\n                if (name != null && value != null) {\n                    var current = values[name];\n                    if(current) {\n                        if (Array.isArray(current)) {\n                            if (Array.isArray(value)) {\n                                values[name] = current.concat(value);\n                            } else {\n                                current.push(value);\n                            }\n                        } else {\n                            if (Array.isArray(value)) {\n                                values[name] = [current].concat(value);\n                            } else {\n                                values[name] = [current, value];\n                            }\n                        }\n                    } else {\n                        values[name] = value;\n                    }\n                }\n                if (validate) {\n                    validateElement(elt, errors);\n                }\n            }\n            if (matches(elt, 'form')) {\n                var inputs = elt.elements;\n                forEach(inputs, function(input) {\n                    processInputValue(processed, values, errors, input, validate);\n                });\n            }\n        }\n\n        function validateElement(element, errors) {\n            if (element.willValidate) {\n                triggerEvent(element, \"htmx:validation:validate\")\n                if (!element.checkValidity()) {\n                    errors.push({elt: element, message:element.validationMessage, validity:element.validity});\n                    triggerEvent(element, \"htmx:validation:failed\", {message:element.validationMessage, validity:element.validity})\n                }\n            }\n        }\n\n        function getInputValues(elt, verb) {\n            var processed = [];\n            var values = {};\n            var formValues = {};\n            var errors = [];\n\n            // only validate when form is directly submitted and novalidate is not set\n            var validate = matches(elt, 'form') && elt.noValidate !== true;\n\n            // for a non-GET include the closest form\n            if (verb !== 'get') {\n                processInputValue(processed, formValues, errors, closest(elt, 'form'), validate);\n            }\n\n            // include the element itself\n            processInputValue(processed, values, errors, elt, validate);\n\n            // include any explicit includes\n            var includes = getClosestAttributeValue(elt, \"hx-include\");\n            if (includes) {\n                var nodes = querySelectorAllExt(elt, includes);\n                forEach(nodes, function(node) {\n                    processInputValue(processed, values, errors, node, validate);\n                    // if a non-form is included, include any input values within it\n                    if (!matches(node, 'form')) {\n                        forEach(node.querySelectorAll(INPUT_SELECTOR), function (descendant) {\n                            processInputValue(processed, values, errors, descendant, validate);\n                        })\n                    }\n                });\n            }\n\n            // form values take precedence, overriding the regular values\n            values = mergeObjects(values, formValues);\n\n            return {errors:errors, values:values};\n        }\n\n        function appendParam(returnStr, name, realValue) {\n            if (returnStr !== \"\") {\n                returnStr += \"&\";\n            }\n            returnStr += encodeURIComponent(name) + \"=\" + encodeURIComponent(realValue);\n            return returnStr;\n        }\n\n        function urlEncode(values) {\n            var returnStr = \"\";\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            returnStr = appendParam(returnStr, name, v);\n                        });\n                    } else {\n                        returnStr = appendParam(returnStr, name, value);\n                    }\n                }\n            }\n            return returnStr;\n        }\n\n        function makeFormData(values) {\n            var formData = new FormData();\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            formData.append(name, v);\n                        });\n                    } else {\n                        formData.append(name, value);\n                    }\n                }\n            }\n            return formData;\n        }\n\n        //====================================================================\n        // Ajax\n        //====================================================================\n\n        function getHeaders(elt, target, prompt) {\n            var headers = {\n                \"HX-Request\" : \"true\",\n                \"HX-Trigger\" : getRawAttribute(elt, \"id\"),\n                \"HX-Trigger-Name\" : getRawAttribute(elt, \"name\"),\n                \"HX-Target\" : getAttributeValue(target, \"id\"),\n                \"HX-Current-URL\" : getDocument().location.href,\n            }\n            getValuesForElement(elt, \"hx-headers\", false, headers)\n            if (prompt !== undefined) {\n                headers[\"HX-Prompt\"] = prompt;\n            }\n            return headers;\n        }\n\n        function filterValues(inputValues, elt) {\n            var paramsValue = getClosestAttributeValue(elt, \"hx-params\");\n            if (paramsValue) {\n                if (paramsValue === \"none\") {\n                    return {};\n                } else if (paramsValue === \"*\") {\n                    return inputValues;\n                } else if(paramsValue.indexOf(\"not \") === 0) {\n                    forEach(paramsValue.substr(4).split(\",\"), function (name) {\n                        name = name.trim();\n                        delete inputValues[name];\n                    });\n                    return inputValues;\n                } else {\n                    var newValues = {}\n                    forEach(paramsValue.split(\",\"), function (name) {\n                        name = name.trim();\n                        newValues[name] = inputValues[name];\n                    });\n                    return newValues;\n                }\n            } else {\n                return inputValues;\n            }\n        }\n\n        function isAnchorLink(elt) {\n          return getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf(\"#\") >=0\n        }\n\n        function getSwapSpecification(elt) {\n            var swapInfo = getClosestAttributeValue(elt, \"hx-swap\");\n            var swapSpec = {\n                \"swapStyle\" : getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n                \"swapDelay\" : htmx.config.defaultSwapDelay,\n                \"settleDelay\" : htmx.config.defaultSettleDelay\n            }\n            if (getInternalData(elt).boosted && !isAnchorLink(elt)) {\n              swapSpec[\"show\"] = \"top\"\n            }\n            if (swapInfo) {\n                var split = splitOnWhitespace(swapInfo);\n                if (split.length > 0) {\n                    swapSpec[\"swapStyle\"] = split[0];\n                    for (var i = 1; i < split.length; i++) {\n                        var modifier = split[i];\n                        if (modifier.indexOf(\"swap:\") === 0) {\n                            swapSpec[\"swapDelay\"] = parseInterval(modifier.substr(5));\n                        }\n                        if (modifier.indexOf(\"settle:\") === 0) {\n                            swapSpec[\"settleDelay\"] = parseInterval(modifier.substr(7));\n                        }\n                        if (modifier.indexOf(\"scroll:\") === 0) {\n                            swapSpec[\"scroll\"] = modifier.substr(7);\n                        }\n                        if (modifier.indexOf(\"show:\") === 0) {\n                            swapSpec[\"show\"] = modifier.substr(5);\n                        }\n                    }\n                }\n            }\n            return swapSpec;\n        }\n\n        function encodeParamsForBody(xhr, elt, filteredParameters) {\n            var encodedParameters = null;\n            withExtensions(elt, function (extension) {\n                if (encodedParameters == null) {\n                    encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt);\n                }\n            });\n            if (encodedParameters != null) {\n                return encodedParameters;\n            } else {\n                if (getClosestAttributeValue(elt, \"hx-encoding\") === \"multipart/form-data\") {\n                    return makeFormData(filteredParameters);\n                } else {\n                    return urlEncode(filteredParameters);\n                }\n            }\n        }\n\n        function makeSettleInfo(target) {\n            return {tasks: [], elts: [target]};\n        }\n\n        function updateScrollState(content, swapSpec) {\n            var first = content[0];\n            var last = content[content.length - 1];\n            if (swapSpec.scroll) {\n                if (swapSpec.scroll === \"top\" && first) {\n                    first.scrollTop = 0;\n                }\n                if (swapSpec.scroll === \"bottom\" && last) {\n                    last.scrollTop = last.scrollHeight;\n                }\n            }\n            if (swapSpec.show) {\n                if (swapSpec.show === \"top\" && first) {\n                    first.scrollIntoView(true);\n                }\n                if (swapSpec.show === \"bottom\" && last) {\n                    last.scrollIntoView(false);\n                }\n            }\n        }\n\n        function getValuesForElement(elt, attr, evalAsDefault, values) {\n            if (values == null) {\n                values = {};\n            }\n            if (elt == null) {\n                return values;\n            }\n            var attributeValue = getAttributeValue(elt, attr);\n            if (attributeValue) {\n                var str = attributeValue.trim();\n                var evaluateValue = evalAsDefault;\n                if (str.indexOf(\"javascript:\") === 0) {\n                    str = str.substr(11);\n                    evaluateValue = true;\n                }\n                if (str.indexOf('{') !== 0) {\n                    str = \"{\" + str + \"}\";\n                }\n                var varsValues;\n                if (evaluateValue) {\n                    varsValues = maybeEval(elt,function () {return Function(\"return (\" + str + \")\")();}, {});\n                } else {\n                    varsValues = parseJSON(str);\n                }\n                for (var key in varsValues) {\n                    if (varsValues.hasOwnProperty(key)) {\n                        if (values[key] == null) {\n                            values[key] = varsValues[key];\n                        }\n                    }\n                }\n            }\n            return getValuesForElement(parentElt(elt), attr, evalAsDefault, values);\n        }\n\n        function maybeEval(elt, toEval, defaultVal) {\n            if (htmx.config.allowEval) {\n                return toEval();\n            } else {\n                triggerErrorEvent(elt, 'htmx:evalDisallowedError');\n                return defaultVal;\n            }\n        }\n\n        function getHXVarsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vars\", true, expressionVars);\n        }\n\n        function getHXValsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vals\", false, expressionVars);\n        }\n\n        function getExpressionVars(elt) {\n            return mergeObjects(getHXVarsForElement(elt), getHXValsForElement(elt));\n        }\n\n        function safelySetHeaderValue(xhr, header, headerValue) {\n            if (headerValue !== null) {\n                try {\n                    xhr.setRequestHeader(header, headerValue);\n                } catch (e) {\n                    // On an exception, try to set the header URI encoded instead\n                    xhr.setRequestHeader(header, encodeURIComponent(headerValue));\n                    xhr.setRequestHeader(header + \"-URI-AutoEncoded\", \"true\");\n                }\n            }\n        }\n\n        function getResponseURL(xhr) {\n            // NB: IE11 does not support this stuff\n            if (xhr.responseURL && typeof(URL) !== \"undefined\") {\n                try {\n                    var url = new URL(xhr.responseURL);\n                    return url.pathname + url.search;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:badResponseUrl\", {url: xhr.responseURL});\n                }\n            }\n        }\n\n        function hasHeader(xhr, regexp) {\n            return xhr.getAllResponseHeaders().match(regexp);\n        }\n\n        function ajaxHelper(verb, path, context) {\n            if (context) {\n                if (context instanceof Element || isType(context, 'String')) {\n                    return issueAjaxRequest(verb, path, null, null, {\n                        targetOverride: resolveTarget(context)\n                    });\n                } else {\n                    return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n                        {\n                            handler : context.handler,\n                            headers : context.headers,\n                            values : context.values,\n                            targetOverride: resolveTarget(context.target)\n                        });\n                }\n            } else {\n                return issueAjaxRequest(verb, path);\n            }\n        }\n\n        function hierarchyForElt(elt) {\n            var arr = [];\n            while (elt) {\n                arr.push(elt);\n                elt = elt.parentElement;\n            }\n            return arr;\n        }\n\n        function issueAjaxRequest(verb, path, elt, event, etc) {\n            var resolve = null;\n            var reject = null;\n            etc = etc != null ? etc : {};\n            if(typeof Promise !== \"undefined\"){\n                var promise = new Promise(function (_resolve, _reject) {\n                    resolve = _resolve;\n                    reject = _reject;\n                });\n            }\n            if(elt == null) {\n                elt = getDocument().body;\n            }\n            var responseHandler = etc.handler || handleAjaxResponse;\n\n            if (!bodyContains(elt)) {\n                return; // do not issue requests for elements removed from the DOM\n            }\n            var target = etc.targetOverride || getTarget(elt);\n            if (target == null) {\n                triggerErrorEvent(elt, 'htmx:targetError', {target: getAttributeValue(elt, \"hx-target\")});\n                return;\n            }\n            var eltData = getInternalData(elt);\n            if (eltData.requestInFlight) {\n                var queueStrategy = 'last';\n                var eventData = getInternalData(event);\n                if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n                    queueStrategy = eventData.triggerSpec.queue;\n                }\n                if (eltData.queuedRequests == null) {\n                    eltData.queuedRequests = [];\n                }\n                if (queueStrategy === \"first\" && eltData.queuedRequests.length === 0) {\n                    eltData.queuedRequests.push(function () {\n                        issueAjaxRequest(verb, path, elt, event)\n                    });\n                } else if (queueStrategy === \"all\") {\n                    eltData.queuedRequests.push(function () {\n                        issueAjaxRequest(verb, path, elt, event)\n                    });\n                } else if (queueStrategy === \"last\") {\n                    eltData.queuedRequests = []; // dump existing queue\n                    eltData.queuedRequests.push(function () {\n                        issueAjaxRequest(verb, path, elt, event)\n                    });\n                }\n                return;\n            } else {\n                eltData.requestInFlight = true;\n            }\n            var endRequestLock = function(){\n                eltData.requestInFlight = false\n                if (eltData.queuedRequests != null &&\n                    eltData.queuedRequests.length > 0) {\n                    var queuedRequest = eltData.queuedRequests.shift();\n                    queuedRequest();\n                }\n            }\n            var promptQuestion = getClosestAttributeValue(elt, \"hx-prompt\");\n            if (promptQuestion) {\n                var promptResponse = prompt(promptQuestion);\n                // prompt returns null if cancelled and empty string if accepted with no entry\n                if (promptResponse === null ||\n                    !triggerEvent(elt, 'htmx:prompt', {prompt: promptResponse, target:target})) {\n                    maybeCall(resolve);\n                    endRequestLock();\n                    return promise;\n                }\n            }\n\n            var confirmQuestion = getClosestAttributeValue(elt, \"hx-confirm\");\n            if (confirmQuestion) {\n                if(!confirm(confirmQuestion)) {\n                    maybeCall(resolve);\n                    endRequestLock()\n                    return promise;\n                }\n            }\n\n            var xhr = new XMLHttpRequest();\n\n            var headers = getHeaders(elt, target, promptResponse);\n            if (etc.headers) {\n                headers = mergeObjects(headers, etc.values);\n            }\n            var results = getInputValues(elt, verb);\n            var errors = results.errors;\n            var rawParameters = results.values;\n            if (etc.values) {\n                rawParameters = mergeObjects(rawParameters, etc.values);\n            }\n            var expressionVars = getExpressionVars(elt);\n            var allParameters = mergeObjects(rawParameters, expressionVars);\n            var filteredParameters = filterValues(allParameters, elt);\n\n            if (verb !== 'get' && getClosestAttributeValue(elt, \"hx-encoding\") == null) {\n                headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n            }\n\n            // behavior of anchors w/ empty href is to use the current URL\n            if (path == null || path === \"\") {\n                path = getDocument().location.href;\n            }\n\n            var requestConfig = {\n                parameters: filteredParameters,\n                unfilteredParameters: allParameters,\n                headers:headers,\n                target:target,\n                verb:verb,\n                errors:errors,\n                path:path,\n                triggeringEvent:event\n            };\n\n            if(!triggerEvent(elt, 'htmx:configRequest', requestConfig)){\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            // copy out in case the object was overwritten\n            path = requestConfig.path;\n            verb = requestConfig.verb;\n            headers = requestConfig.headers;\n            filteredParameters = requestConfig.parameters;\n            errors = requestConfig.errors;\n\n            if(errors && errors.length > 0){\n                triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            var splitPath = path.split(\"#\");\n            var pathNoAnchor = splitPath[0];\n            var anchor = splitPath[1];\n            if (verb === 'get') {\n                var finalPathForGet = pathNoAnchor;\n                var values = Object.keys(filteredParameters).length !== 0;\n                if (values) {\n                    if (finalPathForGet.indexOf(\"?\") < 0) {\n                        finalPathForGet += \"?\";\n                    } else {\n                        finalPathForGet += \"&\";\n                    }\n                    finalPathForGet += urlEncode(filteredParameters);\n                    if (anchor) {\n                        finalPathForGet += \"#\" + anchor;\n                    }\n                }\n                xhr.open('GET', finalPathForGet, true);\n            } else {\n                xhr.open(verb.toUpperCase(), path, true);\n            }\n\n            xhr.overrideMimeType(\"text/html\");\n            xhr.withCredentials = htmx.config.withCredentials;\n\n            // request headers\n            for (var header in headers) {\n                if (headers.hasOwnProperty(header)) {\n                    var headerValue = headers[header];\n                    safelySetHeaderValue(xhr, header, headerValue);\n                }\n            }\n\n            var responseInfo = {xhr: xhr, target: target, requestConfig: requestConfig, pathInfo:{\n                  path:path, finalPath:finalPathForGet, anchor:anchor\n                }\n            };\n\n            xhr.onload = function () {\n                try {\n                    var hierarchy = hierarchyForElt(elt);\n                    responseHandler(elt, responseInfo);\n                    removeRequestIndicatorClasses(indicators);\n                    triggerEvent(elt, 'htmx:afterRequest', responseInfo);\n                    triggerEvent(elt, 'htmx:afterOnLoad', responseInfo);\n                    // if the body no longer contains the element, trigger the even on the closest parent\n                    // remaining in the DOM\n                    if (!bodyContains(elt)) {\n                        var secondaryTriggerElt = null;\n                        while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n                            var parentEltInHierarchy = hierarchy.shift();\n                            if (bodyContains(parentEltInHierarchy)) {\n                                secondaryTriggerElt = parentEltInHierarchy;\n                            }\n                        }\n                        if (secondaryTriggerElt) {\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo);\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo);\n                        }\n                    }\n                    maybeCall(resolve);\n                    endRequestLock();\n                } catch (e) {\n                    triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({error:e}, responseInfo));\n                    throw e;\n                }\n            }\n            xhr.onerror = function () {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendError', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.onabort = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            if(!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)){\n                maybeCall(resolve);\n                endRequestLock()\n                return promise\n            }\n            var indicators = addRequestIndicatorClasses(elt);\n\n            forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n                forEach([xhr, xhr.upload], function (target) {\n                    target.addEventListener(eventName, function(event){\n                        triggerEvent(elt, \"htmx:xhr:\" + eventName, {\n                            lengthComputable:event.lengthComputable,\n                            loaded:event.loaded,\n                            total:event.total\n                        });\n                    })\n                });\n            });\n            triggerEvent(elt, 'htmx:beforeSend', responseInfo);\n            xhr.send(verb === 'get' ? null : encodeParamsForBody(xhr, elt, filteredParameters));\n            return promise;\n        }\n\n        function handleAjaxResponse(elt, responseInfo) {\n            var xhr = responseInfo.xhr;\n            var target = responseInfo.target;\n\n            if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return;\n\n            if (hasHeader(xhr, /HX-Trigger:/i)) {\n                handleTrigger(xhr, \"HX-Trigger\", elt);\n            }\n\n            if (hasHeader(xhr,/HX-Push:/i)) {\n                var pushedUrl = xhr.getResponseHeader(\"HX-Push\");\n            }\n\n            if (hasHeader(xhr, /HX-Redirect:/i)) {\n                window.location.href = xhr.getResponseHeader(\"HX-Redirect\");\n                return;\n            }\n\n            if (hasHeader(xhr,/HX-Refresh:/i)) {\n                if (\"true\" === xhr.getResponseHeader(\"HX-Refresh\")) {\n                    location.reload();\n                    return;\n                }\n            }\n\n            var shouldSaveHistory = shouldPush(elt) || pushedUrl;\n\n            if (xhr.status >= 200 && xhr.status < 400) {\n                if (xhr.status === 286) {\n                    cancelPolling(elt);\n                }\n                // don't process 'No Content'\n                if (xhr.status !== 204) {\n                    if (!triggerEvent(target, 'htmx:beforeSwap', responseInfo)) return;\n\n                    var serverResponse = xhr.response;\n                    withExtensions(elt, function(extension){\n                        serverResponse = extension.transformResponse(serverResponse, xhr, elt);\n                    });\n\n                    // Save current page\n                    if (shouldSaveHistory) {\n                        saveHistory();\n                    }\n\n                    var swapSpec = getSwapSpecification(elt);\n\n                    target.classList.add(htmx.config.swappingClass);\n                    var doSwap = function () {\n                        try {\n\n                            var activeElt = document.activeElement;\n                            var selectionInfo = {};\n                            try {\n                                selectionInfo = {\n                                    elt: activeElt,\n                                    start: activeElt ? activeElt.selectionStart : null,\n                                    end: activeElt ? activeElt.selectionEnd : null\n                                };\n                            } catch (e) {\n                                 // safari issue - see https://github.com/microsoft/playwright/issues/5894\n                            }\n\n                            var settleInfo = makeSettleInfo(target);\n                            selectAndSwap(swapSpec.swapStyle, target, elt, serverResponse, settleInfo);\n\n                            if (selectionInfo.elt &&\n                                !bodyContains(selectionInfo.elt) &&\n                                selectionInfo.elt.id) {\n                                var newActiveElt = document.getElementById(selectionInfo.elt.id);\n                                if (newActiveElt) {\n                                    if (selectionInfo.start && newActiveElt.setSelectionRange) {\n                                        newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end);\n                                    }\n                                    newActiveElt.focus();\n                                }\n                            }\n\n                            target.classList.remove(htmx.config.swappingClass);\n                            forEach(settleInfo.elts, function (elt) {\n                                if (elt.classList) {\n                                    elt.classList.add(htmx.config.settlingClass);\n                                }\n                                triggerEvent(elt, 'htmx:afterSwap', responseInfo);\n                            });\n                            if (responseInfo.pathInfo.anchor) {\n                                location.hash = responseInfo.pathInfo.anchor;\n                            }\n\n                            if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n                                var finalElt = elt;\n                                if (!bodyContains(elt)) {\n                                    finalElt = getDocument().body;\n                                }\n                                handleTrigger(xhr, \"HX-Trigger-After-Swap\", finalElt);\n                            }\n\n                            var doSettle = function(){\n                                forEach(settleInfo.tasks, function (task) {\n                                    task.call();\n                                });\n                                forEach(settleInfo.elts, function (elt) {\n                                    if (elt.classList) {\n                                        elt.classList.remove(htmx.config.settlingClass);\n                                    }\n                                    triggerEvent(elt, 'htmx:afterSettle', responseInfo);\n                                });\n                                // push URL and save new page\n                                if (shouldSaveHistory) {\n                                    var pathToPush = pushedUrl || getPushUrl(elt) || getResponseURL(xhr) || responseInfo.pathInfo.finalPath || responseInfo.pathInfo.path;\n                                    pushUrlIntoHistory(pathToPush);\n                                    triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', {path:pathToPush});\n                                }\n                                updateScrollState(settleInfo.elts, swapSpec);\n\n                                if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n                                    var finalElt = elt;\n                                    if (!bodyContains(elt)) {\n                                        finalElt = getDocument().body;\n                                    }\n                                    handleTrigger(xhr, \"HX-Trigger-After-Settle\", finalElt);\n                                }\n                            }\n\n                            if (swapSpec.settleDelay > 0) {\n                                setTimeout(doSettle, swapSpec.settleDelay)\n                            } else {\n                                doSettle();\n                            }\n                        } catch (e) {\n                            triggerErrorEvent(elt, 'htmx:swapError', responseInfo);\n                            throw e;\n                        }\n                    };\n\n                    if (swapSpec.swapDelay > 0) {\n                        setTimeout(doSwap, swapSpec.swapDelay)\n                    } else {\n                        doSwap();\n                    }\n                }\n            } else {\n                triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({error: \"Response Status Error Code \" + xhr.status + \" from \" + responseInfo.pathInfo.path}, responseInfo));\n            }\n        }\n\n        //====================================================================\n        // Extensions API\n        //====================================================================\n        var extensions = {};\n        function extensionBase() {\n            return {\n                onEvent : function(name, evt) {return true;},\n                transformResponse : function(text, xhr, elt) {return text;},\n                isInlineSwap : function(swapStyle) {return false;},\n                handleSwap : function(swapStyle, target, fragment, settleInfo) {return false;},\n                encodeParameters : function(xhr, parameters, elt) {return null;}\n            }\n        }\n\n        function defineExtension(name, extension) {\n            extensions[name] = mergeObjects(extensionBase(), extension);\n        }\n\n        function removeExtension(name) {\n            delete extensions[name];\n        }\n\n        function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n            if (elt == undefined) {\n                return extensionsToReturn;\n            }\n            if (extensionsToReturn == undefined) {\n                extensionsToReturn = [];\n            }\n            if (extensionsToIgnore == undefined) {\n                extensionsToIgnore = [];\n            }\n            var extensionsForElement = getAttributeValue(elt, \"hx-ext\");\n            if (extensionsForElement) {\n                forEach(extensionsForElement.split(\",\"), function(extensionName){\n                    extensionName = extensionName.replace(/ /g, '');\n                    if (extensionName.slice(0, 7) == \"ignore:\") {\n                        extensionsToIgnore.push(extensionName.slice(7));\n                        return;\n                    }\n                    if (extensionsToIgnore.indexOf(extensionName) < 0) {\n                        var extension = extensions[extensionName];\n                        if (extension && extensionsToReturn.indexOf(extension) < 0) {\n                            extensionsToReturn.push(extension);\n                        }\n                    }\n                });\n            }\n            return getExtensions(parentElt(elt), extensionsToReturn, extensionsToIgnore);\n        }\n\n        //====================================================================\n        // Initialization\n        //====================================================================\n\n        function ready(fn) {\n            if (getDocument().readyState !== 'loading') {\n                fn();\n            } else {\n                getDocument().addEventListener('DOMContentLoaded', fn);\n            }\n        }\n\n        function insertIndicatorStyles() {\n            if (htmx.config.includeIndicatorStyles !== false) {\n                getDocument().head.insertAdjacentHTML(\"beforeend\",\n                    \"<style>\\\n                      .\" + htmx.config.indicatorClass + \"{opacity:0;transition: opacity 200ms ease-in;}\\\n                      .\" + htmx.config.requestClass + \" .\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                      .\" + htmx.config.requestClass + \".\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                    </style>\");\n            }\n        }\n\n        function getMetaConfig() {\n            var element = getDocument().querySelector('meta[name=\"htmx-config\"]');\n            if (element) {\n                return parseJSON(element.content);\n            } else {\n                return null;\n            }\n        }\n\n        function mergeMetaConfig() {\n            var metaConfig = getMetaConfig();\n            if (metaConfig) {\n                htmx.config = mergeObjects(htmx.config , metaConfig)\n            }\n        }\n\n        // initialize the document\n        ready(function () {\n            mergeMetaConfig();\n            insertIndicatorStyles();\n            var body = getDocument().body;\n            processNode(body);\n            window.onpopstate = function (event) {\n                if (event.state && event.state.htmx) {\n                    restoreHistory();\n                }\n            };\n            setTimeout(function () {\n                triggerEvent(body, 'htmx:load', {}); // give ready handlers a chance to load up before firing this event\n            }, 0);\n        })\n\n        return htmx;\n    }\n)()\n}));\n"],"names":["factory","self","htmx","onLoad","onLoadHelper","process","processNode","on","addEventListenerImpl","off","removeEventListenerImpl","trigger","triggerEvent","ajax","ajaxHelper","find","findAll","closest","values","elt","type","getInputValues","remove","removeElement","addClass","addClassToElement","removeClass","removeClassFromElement","toggleClass","toggleClassOnElement","takeClass","takeClassForElement","defineExtension","removeExtension","logAll","logger","useTemplateFragments","config","historyEnabled","historyCacheSize","refreshOnHistoryMiss","defaultSwapStyle","defaultSwapDelay","defaultSettleDelay","includeIndicatorStyles","indicatorClass","requestClass","settlingClass","swappingClass","allowEval","attributesToSettle","withCredentials","wsReconnectDelay","disableSelector","parseInterval","_","internalEval","createEventSource","url","EventSource","createWebSocket","WebSocket","VERBS","VERB_SELECTOR","map","verb","join","str","undefined","slice","parseFloat","getRawAttribute","name","getAttribute","hasAttribute","qualifiedName","getAttributeValue","parentElt","parentElement","getDocument","document","getClosestMatch","condition","getClosestAttributeValue","attributeName","closestAttr","e","matches","selector","matchesFunction","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","getStartTag","match","exec","toLowerCase","parseHTML","resp","depth","responseNode","DOMParser","parseFromString","body","firstChild","createDocumentFragment","makeFragment","querySelector","content","maybeCall","func","isType","o","Object","prototype","toString","isFunction","isRawObject","getInternalData","dataProp","data","toArray","arr","returnArr","i","length","push","forEach","isScrolledIntoView","el","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","window","innerHeight","bodyContains","contains","splitOnWhitespace","trim","split","mergeObjects","obj1","obj2","key","hasOwnProperty","parseJSON","jString","JSON","parse","error","logError","maybeEval","eval","callback","evt","detail","event","console","log","eltOrSelector","querySelectorAll","delay","resolveTarget","setTimeout","removeChild","clazz","classList","add","toggle","children","child","querySelectorAllExt","indexOf","substr","querySelectorExt","arg2","processEventArgs","arg1","arg3","target","listener","ready","eventArgs","addEventListener","removeEventListener","getTarget","explicitTarget","targetStr","boosted","shouldSettleAttribute","cloneAttributes","mergeTo","mergeFrom","attributes","attr","removeAttribute","setAttribute","value","isInlineSwap","swapStyle","extensions","getExtensions","extension","oobSwap","oobValue","oobElement","settleInfo","id","fragment","appendChild","swap","parentNode","triggerErrorEvent","handleOutOfBandSwaps","handlePreservedElements","preservedElt","oldElt","getElementById","replaceChild","handleAttributes","newNode","oldNode","tagName","newAttributes","cloneNode","tasks","makeAjaxLoadTask","processScripts","processFocus","autofocus","autoFocusedElt","focus","insertNodesBefore","insertBefore","childNodes","nodeType","Node","TEXT_NODE","COMMENT_NODE","cleanUpElement","element","internalData","webSocket","close","sseEventSource","listenerInfos","info","swapOuterHTML","swapInnerHTML","eltBeforeNewContent","previousSibling","newElt","nextSibling","replacedWith","elts","ELEMENT_NODE","nextElementSibling","swapAfterBegin","swapBeforeBegin","swapBeforeEnd","swapAfterEnd","maybeSelectFromResponse","newFragment","node","ext","newElements","handleSwap","j","TITLE_FINDER","findTitle","result","selectAndSwap","responseText","title","titleElt","innerHTML","handleTrigger","xhr","header","triggerBody","getResponseHeader","triggers","eventName","WHITESPACE","WHITESPACE_OR_COMMA","SYMBOL_START","SYMBOL_CONT","STRINGISH_START","NOT_WHITESPACE","tokenizeString","tokens","position","charAt","startPosition","startChar","symbol","isPossibleRelativeReference","token","last","paramName","maybeGenerateConditional","shift","bracketCount","conditionalSource","conditionFunction","Function","source","consumeUntil","INPUT_SELECTOR","getTriggerSpecs","explicitTrigger","triggerSpecs","initialLength","every","pollInterval","sseEvent","triggerSpec","eventFilter","changed","once","consume","from","throttle","queue","cancelPolling","cancelled","processPolling","path","interval","nodeData","timeout","issueAjaxRequest","isLocalLink","location","hostname","boostElement","pushURL","rawAttribute","shouldCancel","href","ignoreBoostedAnchorCtrlClick","ctrlKey","metaKey","maybeFilterEvent","explicitCancel","eltToListenOn","eventListener","preventDefault","eventData","handledFor","elementData","stopPropagation","triggeredOnce","lastValue","delayed","clearTimeout","windowIsScrolling","scrollHandler","initScrollHandler","setInterval","maybeReveal","revealed","initialized","processWebSocketInfo","ensureWebSocket","processWebSocketSend","wssSource","retryCount","base_part","port","protocol","socket","onerror","maybeCloseWebSocketSource","onclose","includes","code","getWebSocketReconnectDelay","onopen","response","withExtensions","transformResponse","makeSettleInfo","settleImmediately","webSocketSourceElt","parent","headers","getHeaders","results","errors","filteredParameters","filterValues","getExpressionVars","send","stringify","exp","Math","min","pow","random","processSSEInfo","processSSESource","processSSESwap","sseSrc","maybeCloseSSESource","sseEventName","sseSourceElt","hasEventSource","sseListener","swapSpec","getSwapSpecification","processSSETrigger","loadImmediately","load","loaded","processVerbs","explicitAction","observerOptions","root","threshold","IntersectionObserver","entries","isIntersecting","observe","polling","evalScript","script","innerText","isBoosted","findElementsToProcess","boostedElts","initNode","sseInfo","wsInfo","kebabEventName","replace","makeEvent","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","ignoreEventForLogging","toDo","msg","errorInfo","eventResult","dispatchEvent","kebabName","kebabedEvent","onEvent","currentPathForHistory","getHistoryElement","saveToHistoryCache","scroll","historyCache","localStorage","getItem","splice","setItem","cause","cache","getCachedHistory","cleanInnerHtmlForHistory","className","clone","saveHistory","pathname","search","historyElt","history","replaceState","scrollY","pushUrlIntoHistory","pushState","task","loadHistoryFromServer","request","XMLHttpRequest","details","open","setRequestHeader","onload","this","status","historyElement","restoreHistory","cached","scrollTo","reload","shouldPush","pushUrl","getPushUrl","addRequestIndicatorClasses","indicator","indicators","ic","removeRequestIndicatorClasses","haveSeenNode","processed","isSameNode","shouldInclude","disabled","checked","processInputValue","validate","multiple","files","current","Array","isArray","concat","validateElement","elements","input","willValidate","checkValidity","message","validationMessage","validity","formValues","noValidate","descendant","appendParam","returnStr","realValue","encodeURIComponent","urlEncode","v","makeFormData","formData","FormData","append","prompt","getValuesForElement","inputValues","paramsValue","newValues","isAnchorLink","swapInfo","modifier","encodeParamsForBody","encodedParameters","encodeParameters","updateScrollState","first","scrollTop","scrollHeight","show","scrollIntoView","evalAsDefault","attributeValue","varsValues","evaluateValue","toEval","defaultVal","getHXVarsForElement","expressionVars","getHXValsForElement","safelySetHeaderValue","headerValue","getResponseURL","responseURL","URL","hasHeader","regexp","getAllResponseHeaders","context","Element","targetOverride","handler","hierarchyForElt","etc","resolve","reject","Promise","promise","_resolve","_reject","responseHandler","handleAjaxResponse","eltData","requestInFlight","queueStrategy","queuedRequests","endRequestLock","queuedRequest","promptQuestion","promptResponse","confirmQuestion","confirm","rawParameters","allParameters","requestConfig","parameters","unfilteredParameters","triggeringEvent","splitPath","pathNoAnchor","anchor","finalPathForGet","keys","toUpperCase","overrideMimeType","responseInfo","pathInfo","finalPath","hierarchy","secondaryTriggerElt","parentEltInHierarchy","onabort","upload","lengthComputable","total","pushedUrl","shouldSaveHistory","serverResponse","doSwap","activeElt","activeElement","selectionInfo","start","selectionStart","end","selectionEnd","newActiveElt","setSelectionRange","hash","finalElt","doSettle","pathToPush","settleDelay","swapDelay","extensionBase","text","extensionsToReturn","extensionsToIgnore","extensionsForElement","extensionName","fn","readyState","insertIndicatorStyles","head","insertAdjacentHTML","getMetaConfig","mergeMetaConfig","metaConfig","onpopstate","state"],"sourceRoot":""}