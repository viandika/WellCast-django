{"version":3,"file":"js/npm.gl-mat4.bc35d849.js","mappings":"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","sources":["webpack://wellcast/./node_modules/gl-mat4/adjoint.js","webpack://wellcast/./node_modules/gl-mat4/clone.js","webpack://wellcast/./node_modules/gl-mat4/copy.js","webpack://wellcast/./node_modules/gl-mat4/create.js","webpack://wellcast/./node_modules/gl-mat4/determinant.js","webpack://wellcast/./node_modules/gl-mat4/fromQuat.js","webpack://wellcast/./node_modules/gl-mat4/fromRotation.js","webpack://wellcast/./node_modules/gl-mat4/fromRotationTranslation.js","webpack://wellcast/./node_modules/gl-mat4/fromScaling.js","webpack://wellcast/./node_modules/gl-mat4/fromTranslation.js","webpack://wellcast/./node_modules/gl-mat4/fromXRotation.js","webpack://wellcast/./node_modules/gl-mat4/fromYRotation.js","webpack://wellcast/./node_modules/gl-mat4/fromZRotation.js","webpack://wellcast/./node_modules/gl-mat4/frustum.js","webpack://wellcast/./node_modules/gl-mat4/identity.js","webpack://wellcast/./node_modules/gl-mat4/index.js","webpack://wellcast/./node_modules/gl-mat4/invert.js","webpack://wellcast/./node_modules/gl-mat4/lookAt.js","webpack://wellcast/./node_modules/gl-mat4/multiply.js","webpack://wellcast/./node_modules/gl-mat4/ortho.js","webpack://wellcast/./node_modules/gl-mat4/perspective.js","webpack://wellcast/./node_modules/gl-mat4/perspectiveFromFieldOfView.js","webpack://wellcast/./node_modules/gl-mat4/rotate.js","webpack://wellcast/./node_modules/gl-mat4/rotateX.js","webpack://wellcast/./node_modules/gl-mat4/rotateY.js","webpack://wellcast/./node_modules/gl-mat4/rotateZ.js","webpack://wellcast/./node_modules/gl-mat4/scale.js","webpack://wellcast/./node_modules/gl-mat4/str.js","webpack://wellcast/./node_modules/gl-mat4/translate.js","webpack://wellcast/./node_modules/gl-mat4/transpose.js"],"sourcesContent":["module.exports = adjoint;\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};","module.exports = clone;\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nfunction clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = copy;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = determinant;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};","module.exports = fromRotation\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotate(dest, dest, rad, axis)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var s, c, t\n  var x = axis[0]\n  var y = axis[1]\n  var z = axis[2]\n  var len = Math.sqrt(x * x + y * y + z * z)\n\n  if (Math.abs(len) < 0.000001) {\n    return null\n  }\n\n  len = 1 / len\n  x *= len\n  y *= len\n  z *= len\n\n  s = Math.sin(rad)\n  c = Math.cos(rad)\n  t = 1 - c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c\n  out[1] = y * x * t + z * s\n  out[2] = z * x * t - y * s\n  out[3] = 0\n  out[4] = x * y * t - z * s\n  out[5] = y * y * t + c\n  out[6] = z * y * t + x * s\n  out[7] = 0\n  out[8] = x * z * t + y * s\n  out[9] = y * z * t - x * s\n  out[10] = z * z * t + c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n","module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};","module.exports = fromScaling\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.scale(dest, dest, vec)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0]\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = v[1]\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = v[2]\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n","module.exports = fromTranslation\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.translate(dest, dest, vec)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = v[0]\n  out[13] = v[1]\n  out[14] = v[2]\n  out[15] = 1\n  return out\n}\n","module.exports = fromXRotation\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateX(dest, dest, rad)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromXRotation(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    out[0] = 1\n    out[1] = 0\n    out[2] = 0\n    out[3] = 0\n    out[4] = 0\n    out[5] = c\n    out[6] = s\n    out[7] = 0\n    out[8] = 0\n    out[9] = -s\n    out[10] = c\n    out[11] = 0\n    out[12] = 0\n    out[13] = 0\n    out[14] = 0\n    out[15] = 1\n    return out\n}","module.exports = fromYRotation\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateY(dest, dest, rad)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromYRotation(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    out[0] = c\n    out[1] = 0\n    out[2] = -s\n    out[3] = 0\n    out[4] = 0\n    out[5] = 1\n    out[6] = 0\n    out[7] = 0\n    out[8] = s\n    out[9] = 0\n    out[10] = c\n    out[11] = 0\n    out[12] = 0\n    out[13] = 0\n    out[14] = 0\n    out[15] = 1\n    return out\n}","module.exports = fromZRotation\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateZ(dest, dest, rad)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromZRotation(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    out[0] = c\n    out[1] = s\n    out[2] = 0\n    out[3] = 0\n    out[4] = -s\n    out[5] = c\n    out[6] = 0\n    out[7] = 0\n    out[8] = 0\n    out[9] = 0\n    out[10] = 1\n    out[11] = 0\n    out[12] = 0\n    out[13] = 0\n    out[14] = 0\n    out[15] = 1\n    return out\n}","module.exports = frustum;\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = {\n  create: require('./create')\n  , clone: require('./clone')\n  , copy: require('./copy')\n  , identity: require('./identity')\n  , transpose: require('./transpose')\n  , invert: require('./invert')\n  , adjoint: require('./adjoint')\n  , determinant: require('./determinant')\n  , multiply: require('./multiply')\n  , translate: require('./translate')\n  , scale: require('./scale')\n  , rotate: require('./rotate')\n  , rotateX: require('./rotateX')\n  , rotateY: require('./rotateY')\n  , rotateZ: require('./rotateZ')\n  , fromRotation: require('./fromRotation')\n  , fromRotationTranslation: require('./fromRotationTranslation')\n  , fromScaling: require('./fromScaling')\n  , fromTranslation: require('./fromTranslation')\n  , fromXRotation: require('./fromXRotation')\n  , fromYRotation: require('./fromYRotation')\n  , fromZRotation: require('./fromZRotation')\n  , fromQuat: require('./fromQuat')\n  , frustum: require('./frustum')\n  , perspective: require('./perspective')\n  , perspectiveFromFieldOfView: require('./perspectiveFromFieldOfView')\n  , ortho: require('./ortho')\n  , lookAt: require('./lookAt')\n  , str: require('./str')\n}\n","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = ortho;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};","module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = perspectiveFromFieldOfView;\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n","module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};","module.exports = rotateX;\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};","module.exports = rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};","module.exports = rotateZ;\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = str;\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};"],"names":["module","exports","out","a","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","Float32Array","q","x","y","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","rad","axis","s","c","t","len","Math","sqrt","abs","sin","cos","v","xy","xz","yz","left","right","bottom","top","near","far","rl","tb","nf","create","clone","copy","identity","transpose","invert","adjoint","determinant","multiply","translate","scale","rotate","rotateX","rotateY","rotateZ","fromRotation","fromRotationTranslation","fromScaling","fromTranslation","fromXRotation","fromYRotation","fromZRotation","fromQuat","frustum","perspective","perspectiveFromFieldOfView","ortho","lookAt","str","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","b","b0","b1","b2","b3","lr","bt","fovy","aspect","f","tan","fov","upTan","upDegrees","PI","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","b12","b20","b21","b22"],"sourceRoot":""}