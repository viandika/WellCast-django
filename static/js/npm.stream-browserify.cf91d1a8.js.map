{"version":3,"file":"js/npm.stream-browserify.cf91d1a8.js","mappings":"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","sources":["webpack://wellcast/./node_modules/stream-browserify/index.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","webpack://wellcast/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n"],"names":["module","exports","Stream","EE","call","this","inherits","Readable","Writable","Duplex","Transform","PassThrough","finished","pipeline","prototype","pipe","dest","options","source","ondata","chunk","writable","write","pause","ondrain","readable","resume","on","_isStdio","end","onend","onclose","didOnEnd","destroy","onerror","er","cleanup","listenerCount","removeListener","emit","codes","createErrorType","code","message","Base","Error","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","Object","create","constructor","__proto__","name","oneOf","expected","thing","Array","isArray","len","length","map","i","String","concat","slice","join","value","TypeError","actual","determiner","search","msg","str","start","substr","replace","this_len","undefined","substring","endsWith","type","indexOf","arg","objectKeys","keys","obj","key","push","v","method","allowHalfOpen","once","_writableState","ended","process","nextTick","onEndNT","self","defineProperty","enumerable","get","highWaterMark","getBuffer","_readableState","destroyed","set","_transform","encoding","cb","ReadableState","debug","EElistenerCount","emitter","listeners","Buffer","OurUint8Array","g","Uint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","from","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","stream","isDuplex","objectMode","readableObjectMode","buffer","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","read","_read","_destroy","readableAddChunk","addToFront","skipChunkCheck","state","emitReadable","emitReadable_","onEofChunk","isBuffer","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","unshift","_undestroy","undestroy","err","isPaused","setEncoding","enc","p","head","content","data","next","clear","MAX_HWM","howMuchToRead","n","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","ret","shift","first","consume","endReadable","endReadableNT","wState","xs","x","l","parseInt","nOrig","doRead","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onfinish","cleanedUp","needDrain","pipeOnDrain","event","fn","prependListener","_events","dests","index","splice","ev","res","addListener","removeAllListeners","apply","arguments","wrap","_this","bind","Symbol","asyncIterator","_fromList","iterable","opts","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","done","_write","err2","CorkedRequest","entry","finish","corkReq","callback","pendingcb","onCorkedFinish","corkedRequestsFree","WritableState","realHasInstance","internalUtil","deprecate","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","rState","current","out","_","hasInstance","Function","object","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","_Object$setPrototypeO","_defineProperty","configurable","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","resolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","error","Promise","reject","promise","lastPromise","then","wrapForNext","_this2","_Object$create","iterator","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_defineProperties","target","props","descriptor","inspect","custom","instance","Constructor","_classCallCheck","tail","protoProps","s","alloc","offset","allocUnsafe","copy","hasStrings","_getString","_getBuffer","c","nb","buf","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","noop","eos","called","_len","args","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","req","setHeader","abort","isRequest","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pop","destroys","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","isFinite","Math","floor"],"sourceRoot":""}